import os
from byteGrams import byteGramSelection, byteGramExtractionInstance
from opcodes import opcodeGramSelection, opcodeGramIDFTable, opcodeGramExtractionInstance
from strings import stringsSelection, stringsExtractionInstance
from imports import importsSelection, importsExtractionInstance
from sections import sectionsExtractionInstance
from dlls import dllsSelection, dllsExtractionInstance
from files import filesExtractionInstance
from headers import headersExtractionInstance
from csvResult import csvContact
import train


def main():
    os.chdir(r'./headers')
    headersExtractionInstance.main()
    os.chdir(r'..')

    os.chdir(r'./sections')
    sectionsExtractionInstance.main()
    os.chdir(r'..')

    os.chdir(r'./files')
    filesExtractionInstance.main()
    os.chdir(r'..')

    os.chdir(r'./dlls')
    dllsSelection.main()
    dllsExtractionInstance.main()
    os.chdir(r'..')

    os.chdir(r'./imports')
    importsSelection.main()
    importsExtractionInstance.main()
    os.chdir(r'..')

    os.chdir(r'./strings')
    stringsSelection.main()
    stringsExtractionInstance.main()
    os.chdir(r'..')

    os.chdir(r'./byteGrams')
    byteGramSelection.main()
    byteGramExtractionInstance.main()
    os.chdir(r'..')

    os.chdir(r'./opcodes')
    opcodeGramSelection.main()
    opcodeGramIDFTable.main()
    opcodeGramExtractionInstance.main()
    os.chdir(r'..')

    # 合并所有类型特征csv
    os.chdir(r'./csvResult')
    csvContact.main()
    os.chdir(r'..')

    # 开始训练模型
    train.main()


if __name__ == '__main__':
    main()
