import json
from sections.GetFeaturesAndMaxSectionNum import GetFeaturesAndMaxSectionNum
from sections.sectionsExtractionBase import classParse


def main():
    # 读入json文件，确定要取的样本特征类型
    with open("../config.json") as f:
        configs = json.load(f)
    print('Start to figure out the Features and MaxSectionNum before extract section features:')
    [features, max_section_num] = GetFeaturesAndMaxSectionNum()
    print('Figuring out the Features and MaxSectionNum ends')
    print()

    csvName = configs['sections_csv_name']
    feaClass = csvName[:-4]
    # 对于每一个文件，都应该完成features的填充，boolean类型
    print('Start to extract ' + feaClass + ' features for each malicious sample in train set:')
    classParse(features, max_section_num, configs['malicious_train_samples_path'],
               configs['mal_train_csv_path'] + csvName)
    print()

    print('Start to extract ' + feaClass + ' features for each benign sample in train set:')
    classParse(features, max_section_num, configs['benign_train_samples_path'], configs['ben_train_csv_path'] + csvName)
    print()

    print('Start to extract ' + feaClass + ' features for each malicious sample in validation set:')
    classParse(features, max_section_num, configs['malicious_validation_samples_path'],
               configs['mal_validation_csv_path'] + csvName)
    print()

    print('Start to extract ' + feaClass + ' features for each benign sample in validation set:')
    classParse(features, max_section_num, configs['benign_validation_samples_path'],
               configs['ben_validation_csv_path'] + csvName)
    print()

    print('Start to extract ' + feaClass + ' features for each test sample:')
    classParse(features, max_section_num, configs['test_samples_path'], configs['test_csv_path'] + csvName)
    print()


if __name__ == '__main__':
    main()
